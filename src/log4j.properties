#将配置文件输出到stdout、D、E等目的地
log4j.rootCategory=INFO, stdout, D, E
#org.apache.log4j.ConsoleAppender控制台
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
#System.out,指定输出控制台
log4j.appender.stdout.Target = System.out
#此句为定义名为stdout的输出端的layout是哪种类型，org.apache.log4j.PatternLayout（可以灵活地指定布局模式）
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
#如果使用pattern布局就要指定的打印信息的具体格式ConversionPattern
#log4j.appender.stdout.layout.ConversionPattern =  %d{ABSOLUTE} %5p %c{1}:%L - %m%n
log4j.appender.stdout.layout.ConversionPattern ==%-d{yyyy-MM-dd HH:mm:ss} [QC] [%t] %C.%M(%L[ %p ]  [%m]%n

#==================================
#org.apache.log4j.DailyRollingFileAppender每天产生一个日志文件
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
#此句为定义名为D的输出端的文件名为./WebRoot/logs/info_

#log4j.appender.D.File = ./WebRoot/logs/info_
#log4j.appender.D.File =E:/tomcat6/webapps/Log4jDemo/WebRoot/logs/info_
log4j.appender.D.File =E:/tomcat6/webapps/blog0.2/WebRoot/logs/info/info_

#Append=true将消息添加的日志文件中而不是覆盖
log4j.appender.D.Append = true
#只输出info级别以上的日志
log4j.appender.D.Threshold = INFO
#此句为定义名为D的输出端的layout是哪种类型，org.apache.log4j.PatternLayout（可以灵活地指定布局模式）
log4j.appender.D.layout = org.apache.log4j.PatternLayout
#每天都按日期生成一个文件
log4j.appender.D.DatePattern = yyyyMMdd'.log'
#如果使用pattern布局就要指定的打印信息的具体格式ConversionPattern
#log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [ %p ]  [%m]%n
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [QC] [%t] %C.%M(%L[ %p ]  [%m]%n
#==================================
#org.apache.log4j.DailyRollingFileAppender每天产生一个日志文件
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
#此句为定义名为E的输出端的文件名为./WebRoot/logs/info_
#log4j.appender.E.File = ./WebRoot/logs/error_
#log4j.appender.E.File=E:/tomcat6/webapps/Log4jDemo/WebRoot/logs/error_
log4j.appender.E.File=E:/tomcat6/webapps/blog0.2/WebRoot/logs/error/error_
#Append=true将消息添加的日志文件中而不是覆盖
log4j.appender.E.Append = true
#只输出error级别以上的日志
log4j.appender.E.Threshold = ERROR
#此句为定义名为E的输出端的layout是哪种类型，org.apache.log4j.PatternLayout（可以灵活地指定布局模式）
log4j.appender.E.layout = org.apache.log4j.PatternLayout
#每天都按日期生成一个文件
log4j.appender.E.DatePattern = yyyyMMdd'.log'
#如果使用pattern布局就要指定的打印信息的具体格式ConversionPattern
log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t ] - [ %p ]  [%m]%n
